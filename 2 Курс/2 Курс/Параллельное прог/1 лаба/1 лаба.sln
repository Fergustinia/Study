#include <iostream>
#include <mpi.h>

using namespace std;

int main(int argc, char *argv[]) {
    int rank, size;
    int x;
    float y;

    MPI_Init(&argc, &argv);
    MPI_Comm_rank(MPI_COMM_WORLD, &rank);
    MPI_Comm_size(MPI_COMM_WORLD, &size);

    if (rank == 0) {
        cout << "Enter an integer: ";
        cin >> x;

        MPI_Send(&x, 1, MPI_INT, rank + 1, 0, MPI_COMM_WORLD);
    } else if (rank % 2 != 0 && rank != size - 1) {
        MPI_Recv(&x, 1, MPI_INT, rank - 1, 0, MPI_COMM_WORLD, MPI_STATUS_IGNORE);
        cout << "Process " << rank << " received value: " << x << endl;
    } else if (rank == size - 1) {
        cout << "Enter a float: ";
        cin >> y;

        MPI_Send(&y, 1, MPI_FLOAT, rank - 1, 0, MPI_COMM_WORLD);
    } else if (rank % 2 == 0) {
        MPI_Recv(&y, 1, MPI_FLOAT, rank + 1, 0, MPI_COMM_WORLD, MPI_STATUS_IGNORE);
        cout << "Process " << rank << " received value: " << y << endl;
    }

    MPI_Finalize();
    return 0;
}
