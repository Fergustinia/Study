    %% Задача 1. Линейное программирование
f1 = [-9, -10, -16];  % Целевая функция (минус для максимизации)
A1 = [
    18, 15, 12;
    6, 4, 8;
    5, 3, 3
];
b1 = [360; 192; 180];
lb1 = [0, 0, 0];
ub1 = [3, 3, 3];

[x1, fval1] = linprog(f1, A1, b1, [], [], lb1, ub1);
disp('Задача 1. Оптимальные значения переменных:');
disp(x1);
disp('Максимальное значение целевой функции:');
disp(-fval1);  % Перевод обратно в максимизацию

%% Задача 2. Квадратичное программирование
H2 = 2 * eye(2); % Матрица для квадратичной части (2I, так как (x1-7)^2 + (x2-5)^2)
f2 = [-14, -10]; % Линейные коэффициенты, после раскрытия скобок (линейная часть)
A2 = [1, 1];
b2 = 7;
lb2 = [0, 0];
ub2 = [3, inf];

[x2, fval2] = quadprog(H2, f2, A2, b2, [], [], lb2, ub2);
disp('Задача 2. Оптимальные значения переменных:');
disp(x2);
disp('Минимальное значение целевой функции:');
disp(-fval2);

%% Задача 3. Целочисленное линейное программирование
f3 = [-6, -5]; % Стоимость изделий A и B (минус для максимизации)
A3 = [
    7, 3;
    6, 2;
    1, 1
];
b3 = [1365; 1245; 650];
intcon = [1, 2];
lb3 = [0, 0];
ub3 = [];

[x3, fval3] = intlinprog(f3, intcon, A3, b3, [], [], lb3, ub3);
disp('Задача 3. Оптимальные значения переменных:');
disp(x3);
disp('Максимальное значение целевой функции:');
disp(-fval3);  % Перевод обратно в максимизацию

